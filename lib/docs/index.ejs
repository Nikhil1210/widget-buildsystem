<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>
        <%=htmlWebpackPlugin.optons.title %>
    </title>
</head>
<style>
    body {
        background-color: #f5f5f5;
    }
    
    .widget-buildsystem-widget-demo {
        margin-top: 30px;
        background-color: white;
        padding: 20px;
        border-bottom: solid 1px #ccc;
        border-top: solid 1px #ccc;
    }
    
    .widget-buildsystem-widget-demo-panel-logs {
        position: fixed;
        bottom: 0;
        widows: 100%;
    }
</style>

<body style="padding-bottom: 270px">
    <nav class="navbar navbar-default" id="widget-buildsystem-navbar">
        <div class="container-fluid">
            <ul class="nav navbar-nav">
                <li>
                    <a href="#"> <i class="fa fa-home"></i> </a>
                </li>
                <!-- Widget exmaples menu -->

                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" c role="button" aria-haspopup="true" aria-expanded="false">Widgets <i class="fa fa-angle-down"></i></a>
                    <ul class="dropdown-menu">
                        <% htmlWebpackPlugin.options.WidgetDescriptors.forEach((w, index) => { %>
                            <% if (index > 0){ %>
                                <li role="separator" class="divider"></li>
                                <% }
                                w.htmlSamples.forEach((sample) =>{ %>
                                    <li class="widget-buildsystem-menu-items" id="widget-buildsystem-sample-menu-item-<%=
                                sample.htmlSampleFilename.replace('.html', '').replace(/\./g,'_')%>">
                                        <a href="#<%= sample.htmlSampleFilename %>">
                                            <%= w.name%> <i class="fa fa-angle-right"></i>
                                                <%= 
                                    sample.htmlSampleName%>
                                        </a>
                                    </li>
                                    <%});
                        }); %>
                    </ul>
                </li>

                <!-- Widget documentation menu-->
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Documentation <i class="fa fa-angle-down"></i></a>
                    <ul class="dropdown-menu">
                        <% htmlWebpackPlugin.options.WidgetDescriptors.forEach((w, index) => {%>
                            <% if (index > 0) { %>
                                <li role="separator" class="divider"></li>
                                <% } %>
                                    <li class="widget-buildsystem-menu-items" id="widget-buildsystem-doc-menu-item-<%= w.name %>">
                                        <a href="#<%= w.name %>/README.md">
                                            <%= w.name %>
                                        </a>
                                    </li>
                                    <% }); %>
                    </ul>
                </li>
                <!-- Tools menu-->
                <li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Tools <i class="fa fa-angle-down"></i></a>
                    <ul class="dropdown-menu">
                        <li id="widget-buildsystem-tools-logandevents-toggle"><a href="#widget-buildsystem-tools-logandevents" data-toggle="collapse"> Loags &amp:  Events</a></li>
                    </ul>
                </li>
            </ul>

            <!-- Environment switch-->
            <form class="navbar-form navbar-right">
                <div class="form-group"><input type="text" id="widget-buildsystem-environment" name="environment" class="form-control" placeholder="" autocomplete="off" list="widget-buildsystem-environment-list"></div>
                <button class="btn btn-default" type="submit">Swicth environment</button>
                <datalist id="widget-buildsystem-environment-list">
                    <option value="development"></option>
                    <option value="homologation" ></option>
                    <option value="production"></option>
                 </datalist>
            </form>
        </div>
    </nav>

    <div class="container-fluid">
        <div class="row" id="widget-buildsystem-welcome">
            <div class="col-md-12">
                <h5>Welcome t widget test page</h5>
                <p>Choose one widget in the menu or in the list below:</p>
            </div>
            <div class="col-md-12">
                <% htmlWebpackPlugin.options.WidgetDescriptors.forEach((w) => { %>
                    <div class="list-group">
                        <% if (!w.htmlSamples || w.htmlSamples.length === 0) { %>
                            <a href="#" class="list-group-item disabled">
                                <%= w.name %>
                                    <small> <i class="fa fa-warning"></i> Missing sample for widget
                                    <code> <%= w.sourceRelativePath %> </code> </small>
                            </a>
                            <% } else{
                                    w.htmlSamples.forEach((sample) => {
                                        %>
                                <a href="#<%= sample.htmlSampleFilename%>" class="list-group-item">
                                    <%= w.name %> <i class="fa fa-angle-right"></i>
                                        <% sample.htmlSampleName %>
                                </a>
                                <% });
                                } %>
                    </div>
                    <% }); %>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <h5 id="widget-buildsystem-widget-name"> </h5>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 widget-buildsystem-widget-demo" id="widget-buildsystem-sample-container"></div>
        </div>
    </div>

    <div class="panel panel-info collapse widget-buildsystem-widget-demo-panel-logs" id="widget-buildsystem-tools-logandandevents-close">
        <div class="panel-heading">Logs &amp: Events<i class="fa fa-angle-double-down pull-right">   </i></div>
        <div class="panel-body">
            <pre id="widget-buildsystem-tools-logandandevents-content" style="height:200px;overflow-y: scroll; margin-bottom: 30px; "></pre>
        </div>
    </div>
    <script>
        var queryParams = function() {
            var qd = {};
            if (!location.search) return qd;
            location.search.substr(1).split("&").forEach(function(item) {
                var k = item.split("=")[0],
                    v = decodeURIComponent(item.split("=")[1]);
                (k in qd) ? qd[k].push(v): qd[k] = [v];
            })
            return qd;
        }();

        window.WidgetConfiguration = {
            environment: queryParams["environment"] ? queryParams["environment"][0] : "development",
            sharedCssUrls: [
                "https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css",
                "https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
            ],
        };
        $("#widget-buildsystem-environment").val(window.WidgetConfiguration.environment);

        var mdConverter = new showdown.Converter({
            tables: true,
            extensions: ['prettify']
        });
        mdConverter.setFlavour('github');

        // PRIVATE : log a message inn the log panel
        function WidgetBuilsystem_logToPanel(message) {
            const logPanel = document.querySelector('#widget-buildsystem-tools-logandevents-content');
            const formattedMessage = '[' + new Date().toString() + ']' + message;
            logPanel.innerHTML = formattedMessage + '\n' + logPanel.innerHTML;
        }

        // PUBLIC: used by sample.html
        function captureEvents(selector, eventName) {
            document.querySelector(selector).addEventListener(eventName, function(e) {
                detail = e.detail,
                    WidgetBuilsystem_logToPanel(eventName + ' :: ' + JSON.stringify(detail, null, 2));
            })
        }
        // PRVATE : load a file by name
        function WidgetBuildsystem_loadSample(widgetName) {
            $('.widget-buildsystem-menu-items').removeClass('active');
            var $welcome = $('.widget-buildsystem-welcome');
            var $container = $('.widget-buildsystem-sample-container');

            if (widgetName === '') {
                $('.widget-buildsystem-widget-name').html('');
                $welcome.show();
                $container.hide();
            } else {
                $welcome.hide();
                $container.show();
                var isDoc = widgetName.toLowerCase().indexOf('readme.md') > 0;
                var filename = (isDoc ? 'documentation/' : 'sample/') + widgetName;
                fetch(filename).then(function(r) {
                    return r.text()
                }).then(function(t) {
                    var menuItemId;
                    var title;
                    if (isDoc) {
                        widgetName = widgetName.replace('./README.md', '');
                        menuItemId = 'widget-buildsystem-doc-menu-item-' + widgetName;
                        title = 'Documentation for wifget <strong>' + widgetName + '</strong>';
                        // Transform md to html
                        t = mdConverter.makeHtml(t);
                        t = t.replace(/<table>/g, '<table class="table table-striped table-hover">');
                    } else {
                        menuItemId = 'widget-buildsystem-sample-menu-item' + widgetName.replace('.html', '').replace(/\./g, '_')
                        widgetName = widgetName.split('.')[0];
                        title = 'widget <strong>' + widgetName + '</strong>';
                    }
                    $container.html(t);
                    if (isDoc) {
                        // Force pretty print on code block
                        PR.prettyPrint();
                    }
                    $('#widget-buildsystem-widget-name').html(title);
                    $('#' + menuItemId).addClass('active');
                });
            }
        }

        // Load the widget from the url on page load and register hashcahnge event hanfler
        $(function() {
            const sampleName = window.location.hash.slice(1);
            WidgetBuildsystem_loadSample(sampleName);
            window.addEventListener("hashchange", function() {
                WidgetBuildsystem_loadSample(window.location.hash.slice(1));
            }, false);
        });
        // Bind ui for the tools
        $('#widget-buildsystem-tools-logandevents')
            .on('show.bs.collapse', function() {
                $('#widget-buildsystem-tools-logandevents-toggle').addClass('active');
            })
            .on('hide.bs.collapse', function() {
                $('#widget-buildsystem-tools-logandevents-toggle').removeClass('active');
            });
        $('#widget-buildsystem-tools-logandevents-close').on('click', function() {
            $('#widget-buildsystem-tools-logandevents').collapse('hide');
        })

        $(document).ready(function() {
            $('#widget-buildsystem-navbar .dropdown-submenu >  a').on('click', function(e) {
                $(this).next('ul').toggle();
                e.stopPropagation();
                e.preventDefault();
            });
        });
    </script>
</body>

</html>
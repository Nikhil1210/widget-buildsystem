/*!
 * @skatejs/bore v4.0.1
 * MIT Licensed
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("skatejs-dom-diff"));
	else if(typeof define === 'function' && define.amd)
		define(["skatejs-dom-diff"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("skatejs-dom-diff")) : factory(root["skatejs-dom-diff"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _window = window,
    DocumentFragment = _window.DocumentFragment,
    Node = _window.Node,
    Promise = _window.Promise;
var slice = [].slice;
var _window2 = window,
    customElements = _window2.customElements,
    HTMLElement = _window2.HTMLElement;
var _document = document,
    body = _document.body;
var attachShadow = HTMLElement.prototype.attachShadow;

var diff = __webpack_require__(1).default.diff;

// Ensure we can force sync operations in the polyfill.


if (customElements) {
  customElements.enableFlush = true;
}

// Create and add a fixture to append nodes to.
var fixture = document.createElement('div');
document.body.appendChild(fixture);

// Override to force mode "open" so we can query against all shadow roots.
HTMLElement.prototype.attachShadow = function () {
  return attachShadow.call(this, { mode: 'open' });
};

// Ensures polyfill operations are run sync.
function flush() {
  if (customElements && typeof customElements.flush === 'function') {
    customElements.flush();
  }
}

// Abstraction for:
//
// 1. Native
// 2. Non-compliant browers
// 3. JSDOM or environments that only implement querySelector
function matches(node, query) {
  return (node.matches = node.matchesSelector || node.mozMatchesSelector || node.msMatchesSelector || node.oMatchesSelector || node.webkitMatchesSelector || function (s) {
    var matches = (this.document || this.ownerDocument).querySelectorAll(s);
    var i = matches.length;
    while (--i >= 0 && matches.item(i) !== this) {}
    return i > -1;
  }).call(node, query);
}

function getInstantiatedNodeWithinFixture(node, isRootNode) {
  var isStringNode = typeof node === 'string';

  // If the fixture has been removed from the document, re-insert it.
  if (!body.contains(fixture)) {
    body.appendChild(fixture);
  }

  if (isRootNode) {
    setFixtureContent(node, isStringNode);
  }

  return isStringNode ? fixture.children[0] : node;
}

function setFixtureContent(node, shouldSetChildrenViaString) {
  // If this is a new node, clean up the fixture.
  fixture.innerHTML = '';

  // Add the node to the fixture so it runs the connectedCallback().
  shouldSetChildrenViaString ? fixture.innerHTML = node : fixture.appendChild(node);
}

var Wrapper = function () {
  function Wrapper(node) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, Wrapper);

    var isRootNode = !node.parentNode;

    this.opts = opts;
    this.node = getInstantiatedNodeWithinFixture(node, isRootNode);

    if (customElements && isRootNode) {
      var customElementDefinition = customElements.get(this.node.localName);
      customElementDefinition && flush();
    }
  }

  Wrapper.prototype.all = function all(query) {
    var _this = this;

    var shadowRoot = this.shadowRoot;

    var type = typeof query === 'undefined' ? 'undefined' : _typeof(query);
    var temp = [];

    if (query.nodeType === Node.ELEMENT_NODE) {
      walkTree(shadowRoot, function (node) {
        return diff({ destination: query, source: node, root: true }).length === 0 && temp.push(node);
      });
    } else if (query.prototype instanceof HTMLElement) {
      walkTree(shadowRoot, function (node) {
        return node instanceof query && temp.push(node);
      });
    } else if (type === 'function') {
      walkTree(shadowRoot, function (node) {
        return query(node) && temp.push(node);
      });
    } else if (type === 'object') {
      var keys = Object.keys(query);
      if (keys.length === 0) {
        return temp;
      }
      walkTree(shadowRoot, function (node) {
        return keys.every(function (key) {
          return node[key] === query[key];
        }) && temp.push(node);
      });
    } else if (type === 'string') {
      walkTree(shadowRoot, function (node) {
        if (matches(node, query)) {
          temp.push(node);
        }
      });
    }

    return temp.map(function (n) {
      return new Wrapper(n, _this.opts);
    });
  };

  Wrapper.prototype.has = function has(query) {
    return !!this.one(query);
  };

  Wrapper.prototype.one = function one(query) {
    return this.all(query)[0];
  };

  Wrapper.prototype.wait = function wait(func) {
    return this.waitFor(function (wrap) {
      return !!wrap.node.shadowRoot;
    }).then(func);
  };

  Wrapper.prototype.waitFor = function waitFor(func) {
    var _this2 = this;

    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { delay: 1 },
        delay = _ref.delay;

    return new Promise(function (resolve, reject) {
      var check = function check() {
        var ret = function () {
          try {
            return func(_this2);
          } catch (e) {
            reject(e);
          }
        }();
        if (ret) {
          resolve(_this2);
        } else {
          setTimeout(check, delay);
        }
      };
      setTimeout(check, delay);
    }).catch(function (e) {
      throw e;
    });
  };

  _createClass(Wrapper, [{
    key: 'shadowRoot',
    get: function get() {
      var node = this.node;

      return node.shadowRoot || node;
    }
  }]);

  return Wrapper;
}();

function mount(elem) {
  return new Wrapper(elem);
}

function walk(elem, call) {
  if (call(elem) !== false) {
    return walkTree(elem, call);
  }
}

function walkTree(_ref2, call) {
  var childNodes = _ref2.childNodes;

  for (var _iterator = childNodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
    var _ref3;

    if (_isArray) {
      if (_i >= _iterator.length) break;
      _ref3 = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done) break;
      _ref3 = _i.value;
    }

    var node = _ref3;

    if (walk(node, call) === false) {
      return false;
    }
  }
}

module.exports.mount = mount;

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("skatejs-dom-diff");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(0);


/***/ })
/******/ ]);
});